
# Configuration Nginx pour TopCenter
# À placer dans /etc/nginx/sites-available/ et activer avec un lien symbolique

server {
    listen 80;
    server_name votre-domaine.com www.votre-domaine.com;

    # Redirection vers HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name votre-domaine.com www.votre-domaine.com;

    # Configuration SSL
    ssl_certificate /etc/letsencrypt/live/votre-domaine.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/votre-domaine.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';

    # Optimisations SSL
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # En-têtes de sécurité
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data: https:; style-src 'self' 'unsafe-inline'; font-src 'self'; connect-src 'self' https:;";
    add_header Referrer-Policy 'strict-origin-when-cross-origin';
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), interest-cohort=()";

    # Racine du site (frontend)
    root /var/www/html/votre-domaine.com;
    index index.html;

    # Compression gzip
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 256;

    # Endpoint de vérification de santé
    location /healthcheck {
        access_log off;
        return 200 'OK';
    }

    # Mise en cache des ressources statiques
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
        try_files $uri =404;
    }

    # Rediriger les requêtes API vers le backend Node.js
    location /api/ {
        proxy_pass http://localhost:9000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Protection contre les timeouts
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Pour le SPA: rediriger toutes les requêtes non-fichiers vers index.html
    location / {
        try_files $uri $uri/ /index.html;
        
        # Amélioration de la performance pour les fichiers statiques
        location ~* \.(?:manifest|appcache|html?|xml|json)$ {
            expires -1;
        }
    }

    # Désactiver l'accès aux fichiers cachés
    location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Rate limiting pour la protection contre les attaques
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    location ~ ^/api/(login|register) {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://localhost:9000$request_uri;
    }

    # Logs
    access_log /var/log/nginx/votre-domaine.com.access.log;
    error_log /var/log/nginx/votre-domaine.com.error.log;
}
